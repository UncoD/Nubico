@startuml

skinparam linetype ortho
left to right direction

package interface {

    interface IOnKeyPress {
        + void onKeyPress(Key key)
    }

    interface IOnCollide {
        + void onCollide(PhysicObject physicObject)
    }

}

package controller {

    class SoundController {
        + void playSound(String texturePath)
        + void stopSound()
    }
}

class GameLevel {
.. Списки взаимодействий объектов ..
    - List<GameObject> gameObjects
    - List<IOnCollide> collides
    - List<IOnKeyPress> keyPresses
..
    + void addToLevel()
    + void deleteFromLevel(GameObject gameObject)
}

class Game {
.. Список уровней ..
    - List<GameLevel> levels
.. Доступ через геттеры/сеттеры C# ..
    - int score
.. Контроллеры зависимости ..
    - SoundController soundController
.. Коллбеки ..
    + void onWin(int score)
    + void onLose(int score)
    + void onScoreChanged(int score)
..
    + void start()
    + void win()
    + void lose()
    + void playSound(String soundPath)
    + void stopSound()
    + void addLevel()
}

note right of Game::playSound
  Для запуска фоновой
  музыки в течение всей игры
end note

class GameObject implements IOnKeyPress {
.. Доступ через геттеры/сеттеры C# ..
    - float x
    - float y
    - float xSpeed
    - float ySpeed
    - int health
.. Контроллеры зависимости ..
    - SoundController soundController
.. Коллбеки ..
    + void onHealthChanges()
..
    + GameObject(x, y, String texturePath)
..
    + void setTexture(String texturePath)
    + void playSound(String soundPath)
    + void stopSound()
    + void deleteFromGame()
}

class PhysicObject extends GameObject implements IOnCollide {

}

class TextObject extends GameObject {
    + TextObject(x, y, String text)
}

@enduml
